# Plantilla de Variables para Azure DevOps Pipeline
# Yappa Challenge DevOps

# ===========================================
# VARIABLES REQUERIDAS (SECRETS)
# ===========================================
# Estas variables deben configurarse como SECRETS en Azure DevOps

# 1. GCP_PROJECT_ID
#    Descripción: ID del proyecto Google Cloud Platform
#    Valor: yappa-challenge-devops-442003
#    Tipo: Variable (no secret)

# 2. GCP_SERVICE_ACCOUNT_KEY  
#    Descripción: Clave JSON del service account codificada en base64
#    Valor: [ejecutar: base64 -i azure-devops-key.json | tr -d '\n']
#    Tipo: SECRET (marcar como secret en Azure DevOps)

# 3. ARTIFACT_REGISTRY_URL
#    Descripción: URL completa del Artifact Registry para Docker
#    Valor: us-central1-docker.pkg.dev/yappa-challenge-devops-442003/yappa-repo
#    Tipo: Variable (no secret)

# 4. CLOUD_SQL_INSTANCE_IP
#    Descripción: IP privada de la instancia Cloud SQL PostgreSQL
#    Valor: 10.2.0.3
#    Tipo: Variable (no secret)

# ===========================================
# VARIABLES OPCIONALES (CONFIGURACIÓN)
# ===========================================
# Estas variables pueden modificarse según el entorno

# 5. CLOUD_RUN_REGION
#    Descripción: Región donde desplegar Cloud Run
#    Valor: us-central1
#    Tipo: Variable (no secret)

# 6. ARTIFACT_REGISTRY_REGION  
#    Descripción: Región del Artifact Registry
#    Valor: us-central1
#    Tipo: Variable (no secret)

# 7. SERVICE_NAME
#    Descripción: Nombre del servicio en Cloud Run
#    Valor: yappa-spring-boot-service
#    Tipo: Variable (no secret)

# 8. ENVIRONMENT
#    Descripción: Entorno de despliegue
#    Valor: dev
#    Tipo: Variable (no secret)

# ===========================================
# CONFIGURACIÓN EN AZURE DEVOPS
# ===========================================

# Opción 1: Variable Groups
# 1. Ir a Pipelines → Library → Variable groups
# 2. Crear nuevo grupo: "yappa-gcp-variables"  
# 3. Agregar todas las variables listadas arriba
# 4. Marcar GCP_SERVICE_ACCOUNT_KEY como "Keep this value secret"
# 5. En azure-pipelines.yml agregar:
#    variables:
#      - group: yappa-gcp-variables

# Opción 2: Pipeline Variables
# 1. Ir al pipeline específico
# 2. Edit → Variables
# 3. Agregar cada variable individualmente
# 4. Marcar secrets apropiadamente

# ===========================================
# EXAMPLE YAML CONFIGURATION
# ===========================================

# Variable Groups:
variables:
  - group: yappa-gcp-variables
  - name: projectName
    value: 'yappa-challenge-devops'
  - name: buildConfiguration
    value: 'Release'

# Si usas variables inline (NO recomendado para secrets):
variables:
  GCP_PROJECT_ID: 'yappa-challenge-devops-442003'
  ARTIFACT_REGISTRY_URL: 'us-central1-docker.pkg.dev/yappa-challenge-devops-442003/yappa-repo'  
  CLOUD_SQL_INSTANCE_IP: '10.2.0.3'
  # GCP_SERVICE_ACCOUNT_KEY: NUNCA hardcodear aquí!

# ===========================================
# COMANDOS PARA GENERAR VALORES
# ===========================================

# Generar GCP_SERVICE_ACCOUNT_KEY:
# gcloud iam service-accounts keys create azure-devops-key.json \
#   --iam-account=azure-devops-pipeline@yappa-challenge-devops-442003.iam.gserviceaccount.com
# base64 -i azure-devops-key.json | tr -d '\n'

# Verificar ARTIFACT_REGISTRY_URL:
# gcloud artifacts repositories list --location=us-central1

# Verificar CLOUD_SQL_INSTANCE_IP:
# gcloud sql instances describe yappa-postgres-main --format="value(ipAddresses[0].ipAddress)"

# ===========================================
# VERIFICACIÓN DE VARIABLES
# ===========================================

# En un step del pipeline, agregar para debug (sin secrets):
# - script: |
#     echo "Project ID: $(GCP_PROJECT_ID)"  
#     echo "Registry: $(ARTIFACT_REGISTRY_URL)"
#     echo "SQL IP: $(CLOUD_SQL_INSTANCE_IP)"
#     # NO imprimir GCP_SERVICE_ACCOUNT_KEY
#   displayName: 'Debug Variables'

# ===========================================
# SECURITY BEST PRACTICES
# ===========================================

# 1. Secrets Management:
#    - Usar Azure Key Vault para secrets críticos
#    - Rotar service account keys cada 90 días
#    - Nunca logear secrets en outputs

# 2. Access Control:
#    - Limitar acceso a Variable Groups
#    - Usar diferentes service accounts por entorno
#    - Implementar approval gates para production

# 3. Auditing:
#    - Habilitar audit logs en GCP
#    - Monitorear uso de service accounts
#    - Revisar permisos periódicamente

# ===========================================
# TROUBLESHOOTING VARIABLES
# ===========================================

# Error: Variable not found
# - Verificar que el Variable Group esté vinculado al pipeline
# - Verificar spelling de nombres de variables
# - Verificar scoping de variables (stage/job level)

# Error: Invalid base64
# - Regenerar GCP_SERVICE_ACCOUNT_KEY sin espacios: tr -d '\n'
# - Verificar que no hay caracteres especiales
# - Probar decodificar: echo "VALUE" | base64 -d

# Error: GCP Authentication failed  
# - Verificar que service account existe
# - Verificar roles asignados al service account
# - Verificar que la clave JSON es válida